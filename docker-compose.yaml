version: "3.9"

services:
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 2s
      timeout: 2s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  migrations:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DB_HOST: postgres
    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate"
#      >
#      sh -c "python manage.py makemigrations && python manage.py migrate"

  api:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      DEBUG: false
    volumes:
      - ./core:/app/core/
      - ./todolist:/app/todolist/

#  collect_static:
#    build: .
#    env_file:
#      - .env
#    command: python manage.py collectstatic -c --no-input
#    volumes:
#      - django_static:/app/static/

  frontend:
    image: sermalenk/skypro-front:lesson-35
    restart: on-failure
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
#      collect_static:
#        condition: service_completed_successfully
#    volumes:
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#      - django_static:/usr/share/nginx/html/static/

volumes:
  postgres_data:
#  django_static: